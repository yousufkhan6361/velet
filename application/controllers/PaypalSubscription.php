<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class PaypalSubscription extends MY_Controller {

	/**
	 * Default Controller
	 */



	public function __construct()
    {
    	
        // $this->view_pre = '/test/';
        parent::__construct();
        // $this->view_pre = 'payment/';
        
    }


  

        // NO NEED SINCE PLANS ARE ACTIVE BY DEFAULT
     // public function activatePaypalPlan($planId,$accessToken,$tokenType){

     //    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
     //        $ch = curl_init();

     //        curl_setopt($ch, CURLOPT_URL, 'https://api.sandbox.paypal.com/v1/billing/plans/'.$planId.'/activate');
     //        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
     //        curl_setopt($ch, CURLOPT_POST, 1);

     //        $headers = array();
     //        $headers[] = 'Content-Type: application/json';
     //        $headers[] = 'Authorization: Bearer '.$accessToken;
     //        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

     //        $result = curl_exec($ch);
     //        if (curl_errno($ch)) {
     //            echo 'Error:' . curl_error($ch);
     //        }
     //        curl_close($ch);

     //        return json_decode($result);
     // }




    public function createSubscription(){
        // debug($_POST,1);
        // $request_id = 100;
        $secretKey = PAYPAL_SECRETKEY;
        $clientId = PAYPAL_CLIENTID;
        $request = array();
        $request['token_type'] = $_POST['token_type'];
        $request['access_token'] = $_POST['access_token'];
        $planId = $_POST['planId'];
        $request_id = $_POST['subscription_id'];
        $main_subscription_id = $_POST['subscription_main_id'];

        $user_data  = $this->model_signup->find_by_pk($this->userid);
        $details  = $this->model_packages->find_by_pk($_POST['subscription_id']);
        // debug($user_data);
        // debug($details,1);

        $firstname = $user_data['signup_firstname'];
        $lastname = $user_data['signup_lastname'];
        $email = $user_data['signup_email'];
        $brand = !empty($details['packages_name']) ? $details['packages_name'] : 'The Northern Ireland Package';
        // $this->create_webhook($request['access_token'],$request['token_type']);

            // $request['token_type'] = 'Bearer';
            // $request['access_token'] = 'A21AAG5h5SjknwMiXoxixb2IUJFDEL4pWE1_c3U9VdX5QP21ipbENHkA8YqVrLi4biiITJLtyRpSQu2xtQhw9mYAzHLgJMCig';
            // $planId = 'P-22639004892824811LZAQV5Y';

        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();
        //2019-08-08T09:00:00Z
        //'.date('Y-m-d\'T\'H:i:s\'Z\'').'
        curl_setopt($ch, CURLOPT_URL, 'https://api.sandbox.paypal.com/v1/billing/subscriptions');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        // curl_setopt($ch, CURLOPT_POSTFIELDS, '{"plan_id": "'.$planId.'","start_time": "'.date('Y-m-d\TH:i:s\Z',strtotime("+1 days")).'","subscriber": {"name": {"given_name": "Test Name","surname": "test Doe"},"email_address": "test@gmail.com"},"auto_renewal": true,"application_context": {"brand_name": "example","locale": "en-US","shipping_preference": "SET_PROVIDED_ADDRESS","user_action": "SUBSCRIBE_NOW","payment_method": {"payer_selected": "PAYPAL","payee_preferred": "IMMEDIATE_PAYMENT_REQUIRED"},"return_url": "https://primerealtygrouptx.com/primerealtygroup_dev/","cancel_url": "https://primerealtygrouptx.com/primerealtygroup_dev/"}}');

        $thankyou = g('base_url')."thankyou";
        $subscriptionFail = g('base_url')."subscription-fail";


        curl_setopt($ch, CURLOPT_POSTFIELDS, '{"plan_id": "'.$planId.'","start_time": "'.date('Y-m-d\TH:i:s\Z',strtotime("+1 days")).'","subscriber": {"name": {"given_name": "'.$firstname.'","surname": "'.$lastname.'"},"email_address": "'.$email.'"},"auto_renewal": true,"application_context": {"brand_name": "'.$brand.'","locale": "en-US","shipping_preference": "SET_PROVIDED_ADDRESS","user_action": "SUBSCRIBE_NOW","payment_method": {"payer_selected": "PAYPAL","payee_preferred": "IMMEDIATE_PAYMENT_REQUIRED"},"return_url": "'.$thankyou.'","cancel_url": "'.$subscriptionFail.'"}}');
    


        //check weather return url works on demo links or not???
        curl_setopt($ch, CURLOPT_POST, 1);

        $headers = array();
        $headers[] = 'Accept: application/json';
        $headers[] = 'Authorization: '.$request['token_type'].' '.$request['access_token'].'';
        // $headers[] = 'Paypal-Request-Id: '.$request['subid'].'';
        $headers[] = 'Paypal-Request-Id: '.$request_id.'';
        $headers[] = 'Prefer: return=representation';
        $headers[] = 'Content-Type: application/json';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        // $result = curl_exec($ch);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);

    
        $result = json_decode($result);
        // debug($request_id,1);
        // echo "<pre>"; 
        // print_r($result);
        // exit();

        //SAVE REPOSNE IN SUBSCRIPTION
        $param = array();
        $param['subscription_subcreated_post'] = serialize($result);
        $param['subscription_sub_id'] = $result->id ;
        $param['subscription_membership_id'] = $request_id;
        $param['subscription_firstname'] = $user_data['signup_firstname'];
        $param['subscription_lastname'] = $user_data['signup_lastname'];
        $param['subscription_email'] = $user_data['signup_email'];
        $this->model_subscription->update_by_pk($main_subscription_id,$param);

        //debug($result->links[0]->href);

        // try {
            
        // } catch (Exception $e) {
            
        // }

        // debug($result->links[0]->href,1);
        // debug($_POST,1);
        // debug(unserialize($result));
        try {
        
            if (!empty($result->links[0]->href)) {
            $json_result['response_url'] = $result->links[0]->href;
            }else
            {
            $json_result['response_url'] = l('paypal/paypal_error');
            }

        } catch (Exception $e) {
         $json_result['response_url'] = l('paypal/paypal_error');   
        }
        
        echo json_encode($json_result); 
    
    }


public function subscription_detail($paypal_subscription,$accessToken,$tokenType="",$subscription_id)
    {
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, "https://api.sandbox.paypal.com/v1/billing/subscriptions/$paypal_subscription");
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


        $headers = array();
        $headers[] = 'Content-Type: application/json';
        // $headers[] = 'Authorization: Bearer A21AAFLIg0fgT5eHXvsENUXwNIYoMP60IT4OraxE0nmxBpsf0tbBGGi1cjdg7B0xJXmSdi3uyFrMtyM_BXTXNgJPRIdC6wNPw';
        $headers[] = 'Authorization: '.$tokenType.' '.$accessToken.'';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);

        // echo "<pre>"; 
        // print_r($result);

            return $result;
    }
    
    public function create_webhook($accessToken,$tokenType)
    {

        // $accessToken = 'A21AAFLIg0fgT5eHXvsENUXwNIYoMP60IT4OraxE0nmxBpsf0tbBGGi1cjdg7B0xJXmSdi3uyFrMtyM_BXTXNgJPRIdC6wNPw';
        // $tokenType = 'Bearer';

        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://api.sandbox.paypal.com/v1/notifications/webhooks');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        // curl_setopt($ch, CURLOPT_POSTFIELDS, "{\n  \"url\": \"https://example.com/example_webhook\",\n  \"event_types\": [\n    {\n      \"name\": \"PAYMENT.AUTHORIZATION.CREATED\"\n    },\n    {\n      \"name\": \"PAYMENT.AUTHORIZATION.VOIDED\"\n    }\n  ]\n}");
        // curl_setopt($ch, CURLOPT_POSTFIELDS, '{"url": "https://demo-designproficient.com/animated_artist_dev/test2/subscription_webhook",
        //     "event_types": [  
        //      {"name": "PAYMENT.AUTHORIZATION.CREATED" },
        //      {"name": "PAYMENT.AUTHORIZATION.VOIDED"},
        //      {"name": "BILLING.SUBSCRIPTION.CREATED" },
        //      {"name": "BILLING.PLAN.CREATED" }
        //        ]}');

        curl_setopt($ch, CURLOPT_POSTFIELDS, '{"url": "'.g('base_url').'/PaypalSubscription/subscription_webhook",
            "event_types": [  
             {"name": "BILLING.SUBSCRIPTION.CREATED" },
             {"name": "BILLING.SUBSCRIPTION.UPDATED" },
             {"name": "BILLING.SUBSCRIPTION.CANCELLED" },
             {"name": "BILLING.SUBSCRIPTION.SUSPENDED" },
             {"name": "BILLING.SUBSCRIPTION.RE-ACTIVATED" },
             {"name": "BILLING.PLAN.CREATED" }
               ]}');

        $headers = array();
        $headers[] = 'Content-Type: application/json';
        // $headers[] = 'Authorization: Bearer Access-Token';
        $headers[] = 'Authorization: '.$tokenType.' '.$accessToken.'';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);     


        $msg = $result;
        $msg = wordwrap($msg,5000);
        //mail("johnsu6361@gmail.com","Paypal Animated Webwook created",$msg);

        //  echo "<pre>"; 
        // print_r($result);   
    }

    public function subscription_webhook()
    {
        $msg = serialize($_POST);     
        $msg .= '\n';
        $msg .= serialize($_GET);        
        $msg = wordwrap($msg,5000);
        mail("johnsu6361@gmail.com","Paypal Animated Webwook IPN",$msg);
    }



    // Form Order Confirm page after Pay
    public function paypal_success()
    {

        // debug($_GET,1);
    if (isset($_GET['subscription_id'])) {
            
        
        $paypal_subscriptionid = $_GET['subscription_id'];
        
        $param = array();
        $param['where']['subscription_sub_id'] = $paypal_subscriptionid;
        $detail = $this->model_subscription->find_one($param);

        //$data['banner'] = $this->model_inner_banner->get_banner(15);
        //GET ACTIVATION STATUS
        
        $activation_status = $this->subscription_detail($paypal_subscriptionid,$detail['subscription_accesstoken'],$detail['subscription_tokentype'],$detail['subscription_id']);

        $activation_status = json_decode($activation_status);
        // debug($activation_status);

        $param = array();
        if ($activation_status->status == 'ACTIVE' || ($activation_status->status == 'APPROVED')) {

              $param['subscription_status'] = 1;  
              $param['subscription_payment_status'] = 1;

        }

        $param['subscription_txn_message'] = $activation_status->status;  
        $param['subscription_activation_post'] = serialize($activation_status);
        $this->model_subscription->update_by_pk($detail['subscription_id'],$param);

            // Email Start
            // if(ENVIRONMENT != 'development')
            // {
            //     debug($detail);
            //     debug($activation_status,1);
            //     // sent to user email
            //     $this->model_email->subscription_notification($detail['subscription_id'] , 'USER');
            //     // sent to admin email
            //     $this->model_email->subscription_notification($detail['subscription_id'] , 'ADMIN');
            // }

            $data['subscription_detail'] = $detail;
            $data['membership_detail'] = $this->model_packages->find_by_pk($data['subscription_detail']['subscription_membership_id']);
            // $date['subscription_detail'] = $detail;
            if (ENVIRONMENT != "development") 
            {
                $template = $this->load->view('_layout/email_template/invoice',$data,true);
                 $title = 'Membership Confirmation - Invoice #' . $data['subscription_detail']['subscription_id'];
                 $to = $data['subscription_detail']['subscription_email'];
                     // debug($to,1);
                    parent::client_email_order($to,$template,$title);
            }

            $this->cart->destroy();
            $array_items = array();
            $array_items = array('discount','shipping_charges','tax');
            $this->session->unset_userdata($array_items);

            $this->load_view('success',$data);

            }
    }

    // If error found in payment
    public function paypal_error()
    {
        // if(isset($_GET))
        // {
            $generate_code = order_no_encrypt($_GET['id']);
            // if($generate_code == $_GET['code'])
            if( 1 == 1)
            {
                // redirect(l('cart/error/?oid=' . $_GET['id']) , true);
                $this->load_view('error',$data);
            }
            else
            {
                redirect(l('home/error' , true));
            }
        // }
    }



}
